19.Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order

Ans: SELECT NAME FROM EMPLOYEE ORDER BY NAME ASC;

20.Write a query that prints a list of employee names (i.e.: the name attribute) 
for employees in Employee having a salary greater than $2000 per month who have been employees for less than 10 months. 
Sort your result by ascending employee_id.

Ans:SELECT NAME FROM EMPLOYEE WHERE SALARY >2000 AND MONTHS <10  ORDER BY EMPLOYEE_ID ASC;

21.Write a query identifying the type of each record in the TRIANGLES table using its three side lengths.
Output one of the following statements for each record in the table:      ## type of triangle

Equilateral: It's a triangle with 3 sides of equal length.
Isosceles: It's a triangle with  3sides of equal length.
Scalene: It's a triangle with 3 sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle.

Ans: SELECT  
CASE
    WHEN (A+B > C AND B+C > A AND A+C > B) THEN
    (CASE
        WHEN A = B AND B = C THEN "Equilateral"
        WHEN A = B OR B = C OR A = C THEN "Isosceles"
        WHEN A != B AND B != C AND A != C THEN "Scalene"
    END)
    ELSE "Not A Triangle"
END;

22.Query a count of the number of cities in CITY having a Population larger than 100000.     ## count Function 

Ans : SELECT COUNT(*) FROM CITY WHERE POPULATION >100000;

23.Query the sum of the populations for all Japanese cities in CITY.  ##Japan pulation
    The COUNTRYCODE for Japan is JPN.
Ans: SELECT SUM(population) FROM city WHERE countrycode = 'JPN';

24.Query the total population of all cities in CITY where District is California.

Ans: SELECT SUM(POPULATION )FROM CITY WHERE DISTRICT ='CALIFORNIA';

25.Query the average population of all cities in CITY where District is California.
 Ans : Select avg(population) From city where district ='California';

 26.Query the average population for all cities in CITY, rounded down to the nearest integer.
 Ans: Select floor(avg(population)) From city;

 27.Query the difference between the maximum and minimum populations in CITY.   ##Population Density Difference.

 Ans: SELECT MAX(POPULATION)-MIN(POPULATION) FROM CITY;

 28.Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table,
    but did not realize her keyboard's  key was broken until after completing the calculation.
    She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), ## The Blunder
    and the actual average salary.
    Write a query calculating the amount of error (i.e.:  average monthly salaries), 
    and round it up to the next integer.

    Ans:select cast(CEILING(avg(cast(salary as float)) - avg(cast(replace(salary,0,'') as float)))as int) from Employees;

  29.We define an employee's total earnings to be their monthly salary/months worked, and       ## Top Earner 
      the maximum total earnings to be the maximum total earnings for any employee in the Employee table. 
      Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. 
      Then print these values as  space-separated integers.

      Ans: select max(months * salary), count(months * salary) 
           from Employee where (months * salary) 
           = (select max(months * salary) from Employee);


     30.   Query the following two values from the STATION table:   ##  Weathear Oservation 2

         The sum of all values in LAT_N rounded to a scale of 2 decimal places.
         The sum of all values in LONG_W rounded to a scale of 2 decimal places.  
         
        Ans : SELECT ROUND(SUM(lat_n),2), ROUND(SUM(long_w),2) FROM STATION;

       31. Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345.
          Truncate your answer to 4 decimal places.  ##Weathear Oservation 13. 

          Ans: SELECT TRUNCATE (SUM(LAT_N),4) from  Station WHERE LAT_N>38.7880 AND LAT_N<137.2345;

       32.Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345 . 
          runcate your answer to 4 decimal places.  ##Weathear Oservation 14. 
            
        Ans : SELECT TRUNCATE(MAX(LAT_N),4)FROM STATION WHERE LAT_N<137.2345;

        33. Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345.
            Round your answer to  4decimal places.   ##Weathear Oservation 15.

        Ans: Select ROUND(LONG_W,4) from STATION 
             where LAT_N = (
             Select max(LAT_N) from STATION where LAT_N < 137.2345);

          34.Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7780.
             Round your answer to  decimal places.  #Weathear Oservation 16.


          Ans: SELECT FORMAT(round(min(LAT_N),4),'F4') FROM STATION WHERE LAT_N > 38.7780;

          35.Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than  38.7780 . 
             Round your answer to 4 decimal places.    #Weathear Oservation 17.

             Ans: select cast(round(long_w,4)as decimal(10,4)) from station where lat_n = (select min(lat_n) from station where lat_n > 38.7780 );

           36. Given the CITY and COUNTRY tables, query the sum of the populations of all cities where the CONTINENT is 'Asia'.
              Note: CITY.CountryCode and COUNTRY.Code are matching key columns. ##Population Census

              Ans: select sum(city.population) from country left join city on country.code = city.countrycode 
                    where country.continent = 'Asia';

            37.Given the CITY and COUNTRY tables, query the names of all cities where the CONTINENT is 'Africa'.
               Note: CITY.CountryCode and COUNTRY.Code are matching key columns. ##African Citie

            Ans:select city.name from city, country where city.countrycode = country.code 
                and country.continent='Africa';

            38.Given the CITY and COUNTRY tables, query the names of all the continents (COUNTRY.Continent) and 
               their respective average city populations (CITY.Population) rounded down to the nearest integer.
               Note: CITY.CountryCode and COUNTRY.Code are matching key columns.

            Ans: select country.continent, floor(avg(city.population)) from country
                 join city on city.countrycode = country.code group by country.continent;
             
          

         


    


 
